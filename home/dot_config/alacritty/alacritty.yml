# Configuration for Alacritty, the GPU enhanced terminal emulator.

# Any items in the `env` entry below will be added as
# environment variables. Some entries may override variables
# set by alacritty itself.
env:
  # TERM variable
  #
  # This value is used to set the `$TERM` environment variable for
  # each instance of Alacritty. If it is not present, alacritty will
  # check the local terminfo database and use 'alacritty' if it is
  # available, otherwise 'xterm-256color' is used.
  #
  TERM: xterm-256color

window:
  dynamic_title: true
  opacity: 0.8
  # Window dimensions (changes require restart)
  #
  # Specified in number of columns/lines, not pixels.
  # If both are `0`, this setting is ignored.
  dimensions:
    columns: 80
    lines: 24

  # Window padding (changes require restart)
  #
  # Blank space added around the window in pixels. This padding is not scaled
  # by DPI and the specified value is always added at both opposing sides.
  padding:
    x: 2
    y: 2

  # Window decorations
  #
  # Values for `decorations`:
  #     - full: Borders and title bar
  #     - none: Neither borders nor title bar
  decorations: full

scrolling:
  # Maximum number of lines in the scrollback buffer.
  # Specifying '0' will disable scrolling.
  history: 100000

  # Number of lines the viewport will move for every line scrolled when
  # scrollback is enabled (history > 0).
  multiplier: 3

# Font configuration (changes require restart)
#
# Important font attributes like antialiasing, subpixel aa, and hinting can be
# controlled through fontconfig. Specifically, the following attributes should
# have an effect:
#   - hintstyle
#   - antialias
#   - lcdfilter
#   - rgba
#
# For instance, if you wish to disable subpixel antialiasing, you might set the
# rgba property to `none`. If you wish to completely disable antialiasing, you
# can set antialias to `false`.
#
# Please see these resources for more information on how to use fontconfig:
#   - https://wiki.archlinux.org/index.php/font_configuration#Fontconfig_configuration
#   - file:///usr/share/doc/fontconfig/fontconfig-user.html
font:
  # Normal (roman) font face
  normal:
    family: monospace
    # The `style` can be specified to pick a specific face.
    # style: Regular

  # Bold font face
  bold:
    family: monospace
    # The `style` can be specified to pick a specific face.
    # style: Bold

  # Italic font face
  italic:
    family: monospace
    # The `style` can be specified to pick a specific face.
    # style: Italic

  # Point size
  size: 9.0

  # Offset is the extra space around each character. `offset.y` can be thought of
  # as modifying the line spacing, and `offset.x` as modifying the letter spacing.
  offset:
    x: 0
    y: 0

  # Glyph offset determines the locations of the glyphs within their cells with
  # the default being at the bottom. Increasing `x` moves the glyph to the right,
  # increasing `y` moves the glyph upwards.
  glyph_offset:
    x: 0
    y: 0

  # Scale the font size based on the monitor's DPI. This will lead to bigger text on HiDPI
  # screens and make reading text a little easier.
  # On X11 it is possible to change the DPI for each instance of alacritty by using
  # `WINIT_HIDPI_FACTOR=1.0 alacritty` to scale the font.
  # scale_with_dpi: true

# Display the time it takes to redraw each frame.

# Use custom cursor colors. If `true`, the `colors.cursor.foreground` and
# `colors.cursor.background` colors will be used to display the cursor.
# Otherwise the cell colors are inverted for the cursor.
# custom_cursor_colors: false

# If `true`, bold text is drawn using the bright color variants.
draw_bold_text_with_bright_colors: true

# Colors (Tomorrow Night Bright)
colors:
  # Default colors
  primary:
    background: "0x000000"
    foreground: "0xeaeaea"

    # Bright and dim foreground colors
    #
    # The dimmed foreground color is calculated automatically if it is not present.
    # If the bright foreground color is not set, or `draw_bold_text_with_bright_colors`
    # is `false`, the normal foreground color will be used.
    #
    #dim_foreground: '0x9a9a9a'
    #bright_foreground: '0xffffff'

  # Cursor colors
  #
  # These will only be used when the `custom_cursor_colors` field is set to `true`.
  cursor:
    text: "0x000000"
    cursor: "0xffffff"

  # Normal colors
  normal:
    black: "0x000000"
    red: "0xd54e53"
    green: "0xb9ca4a"
    yellow: "0xe6c547"
    blue: "0x7aa6da"
    magenta: "0xc397d8"
    cyan: "0x70c0ba"
    white: "0xffffff"

  # Bright colors
  bright:
    black: "0x666666"
    red: "0xff3334"
    green: "0x9ec400"
    yellow: "0xe7c547"
    blue: "0x7aa6da"
    magenta: "0xb77ee0"
    cyan: "0x54ced6"
    white: "0xffffff"

  # Dim colors
  #
  # If the dim colors are not set, they will be calculated automatically based
  # on the `normal` colors.
  dim:
    black: "0x333333"
    red: "0xf2777a"
    green: "0x99cc99"
    yellow: "0xffcc66"
    blue: "0x6699cc"
    magenta: "0xcc99cc"
    cyan: "0x66cccc"
    white: "0xdddddd"

  # Indexed Colors
  #
  # The indexed colors include all colors from 16 to 256.
  # When these are not set, they're filled with sensible defaults.
  #
  #indexed_colors:
  #  - { index: 16, color: '0x000000' }

# Visual Bell
#
# Any time the BEL code is received, Alacritty "rings" the visual bell. Once
# rung, the terminal background will be set to white and transition back to the
# default background color. You can control the rate of this transition by
# setting the `duration` property (represented in milliseconds). You can also
# configure the transition function by setting the `animation` property.
#
# Values for `animation`:
#   - Ease
#   - EaseOut
#   - EaseOutSine
#   - EaseOutQuad
#   - EaseOutCubic
#   - EaseOutQuart
#   - EaseOutQuint
#   - EaseOutExpo
#   - EaseOutCirc
#   - Linear
#
# Specifying a `duration` of `0` will disable the visual bell.
bell:
  animation: EaseOutExpo
  duration: 0

# Background opacity
#
# Window opacity as a floating point number from `0.0` to `1.0`.
# The value `0.0` is completely transparent and `1.0` is opaque.

# Mouse bindings
#
# Available fields:
#   - mouse
#   - action
#   - mods (optional)
#
# Values for `mouse`:
#   - Middle
#   - Left
#   - Right
#   - Numeric identifier such as `5`
#
# All available `mods` and `action` values are documented in the key binding
# section.
mouse_bindings:
  - { mouse: Middle, action: PasteSelection }

mouse:
  # Click settings
  #
  # The `double_click` and `triple_click` settings control the time
  # alacritty should wait for accepting multiple clicks as one double
  # or triple click.
  double_click: { threshold: 300 }
  triple_click: { threshold: 300 }
  hide_when_typing: true

selection:
  semantic_escape_chars: ',â”‚`|:"'' ()[]{}<>'

  # When set to `true`, selected text will be copied to both the primary and
  # the selection clipboard. Otherwise, it will only be copied to the selection
  # clipboard.
  save_to_clipboard: false

# Cursor style
#
# Values for 'cursor_style':
#   - Block
#   - Underline
#   - Beam
# cursor_style: Block

# If this is `true`, the cursor will be rendered as a hollow box when the
# window is not focused.

# Live config reload (changes require restart)
live_config_reload: true

# Shell
#
# You can set `shell.program` to the path of your favorite shell, e.g. `/bin/fish`.
# Entries in `shell.args` are passed unmodified as arguments to the shell.
#
# shell:
#   program: /usr/bin/env
#   args:
#     - zsh
#     - -l
#     - -c
#     - "tmux"

# Key bindings
#
# Key bindings are specified as a list of objects. Each binding will specify
# a key and modifiers required to trigger it, terminal modes where the binding
# is applicable, and what should be done when the key binding fires. It can
# either send a byte sequnce to the running application (`chars`), execute
# a predefined action (`action`) or fork and execute a specified command plus
# arguments (`command`).
#
# Example:
#   `- { key: V, mods: Command, action: Paste }`
#
# Available fields:
#   - key
#   - mods (optional)
#   - chars | action | command (exactly one required)
#   - mode (optional)
#
# Values for `key`:
#   - `A` -> `Z`
#   - `F1` -> `F12`
#   - `Key1` -> `Key0`
#
#   A full list with available key codes can be found here:
#   https://docs.rs/glutin/*/glutin/enum.VirtualKeyCode.html#variants
#
# Values for `mods`:
#   - Command
#   - Control
#   - Shift
#   - Alt
#
#   Multiple `mods` can be combined using `|` like this: `mods: Control|Shift`.
#   Whitespace and capitalization is relevant and must match the example.
#
# Values for `chars`:
#   The `chars` field writes the specified string to the terminal. This makes
#   it possible to pass escape sequences.
#   To find escape codes for bindings like `PageUp` ("\x1b[5~"), you can run
#   the command `showkey -a` outside of tmux.
#   Note that applications use terminfo to map escape sequences back to
#   keys. It is therefore required to update the terminfo when
#   changing an escape sequence.
#
# Values for `action`:
#   - Paste
#   - PasteSelection
#   - Copy
#   - IncreaseFontSize
#   - DecreaseFontSize
#   - ResetFontSize
#   - ScrollPageUp
#   - ScrollPageDown
#   - ScrollToTop
#   - ScrollToBottom
#   - ClearHistory
#   - Hide
#   - Quit
#
# Values for `command`:
#   The `command` field must be a map containing a `program` string and
#   an `args` array of command line parameter strings.
#
#   Example:
#       `command: { program: "alacritty", args: ["-e", "vttest"] }`
#
# Values for `mode`:
#   - ~AppCursor
#   - AppCursor
#   - ~AppKeypad
#   - AppKeypad

key_bindings:
  - { key: Paste, action: Paste }
  - { key: Copy, action: Copy }
  - { key: L, mods: Control, action: ClearLogNotice }
  - { key: L, mods: Control, mode: ~Vi, chars: "\x0c" }
  - { key: PageUp, mods: Shift, mode: ~Alt, action: ScrollPageUp }
  - { key: PageDown, mods: Shift, mode: ~Alt, action: ScrollPageDown }
  - { key: Home, mods: Shift, mode: ~Alt, action: ScrollToTop }
  - { key: End, mods: Shift, mode: ~Alt, action: ScrollToBottom }

  # Vi Mode
  - { key: Space, mods: Shift|Control, mode: Vi, action: ScrollToBottom }
  - { key: Space, mods: Shift|Control, action: ToggleViMode }
  - { key: Escape, mode: Vi, action: ClearSelection }
  - { key: I, mode: Vi, action: ScrollToBottom }
  - { key: I, mode: Vi, action: ToggleViMode }
  - { key: Y, mods: Control, mode: Vi, action: ScrollLineUp }
  - { key: E, mods: Control, mode: Vi, action: ScrollLineDown }
  - { key: G, mode: Vi, action: ScrollToTop }
  - { key: G, mods: Shift, mode: Vi, action: ScrollToBottom }
  - { key: B, mods: Control, mode: Vi, action: ScrollPageUp }
  - { key: F, mods: Control, mode: Vi, action: ScrollPageDown }
  - { key: U, mods: Control, mode: Vi, action: ScrollHalfPageUp }
  - { key: D, mods: Control, mode: Vi, action: ScrollHalfPageDown }
  - { key: Y, mode: Vi, action: Copy }
  - { key: Y, mode: Vi, action: ClearSelection }
  - { key: Copy, mode: Vi, action: ClearSelection }
  - { key: V, mode: Vi, action: ToggleNormalSelection }
  - { key: V, mods: Shift, mode: Vi, action: ToggleLineSelection }
  - { key: V, mods: Control, mode: Vi, action: ToggleBlockSelection }
  - { key: V, mods: Alt, mode: Vi, action: ToggleSemanticSelection }
  - { key: Return, mode: Vi, action: Open }
  - { key: K, mode: Vi, action: Up }
  - { key: J, mode: Vi, action: Down }
  - { key: H, mode: Vi, action: Left }
  - { key: L, mode: Vi, action: Right }
  - { key: Up, mode: Vi, action: Up }
  - { key: Down, mode: Vi, action: Down }
  - { key: Left, mode: Vi, action: Left }
  - { key: Right, mode: Vi, action: Right }
  - { key: Key0, mode: Vi, action: First }
  - { key: Key4, mods: Shift, mode: Vi, action: Last }
  - { key: Key6, mods: Shift, mode: Vi, action: FirstOccupied }
  - { key: H, mods: Shift, mode: Vi, action: High }
  - { key: M, mods: Shift, mode: Vi, action: Middle }
  - { key: L, mods: Shift, mode: Vi, action: Low }
  - { key: B, mode: Vi, action: SemanticLeft }
  - { key: W, mode: Vi, action: SemanticRight }
  - { key: E, mode: Vi, action: SemanticRightEnd }
  - { key: B, mods: Shift, mode: Vi, action: WordLeft }
  - { key: W, mods: Shift, mode: Vi, action: WordRight }
  - { key: E, mods: Shift, mode: Vi, action: WordRightEnd }
  - { key: Key5, mods: Shift, mode: Vi, action: Bracket }
  - { key: Slash, mode: Vi, action: SearchForward }
  - { key: Slash, mods: Shift, mode: Vi, action: SearchBackward }
  - { key: N, mode: Vi, action: SearchNext }
  - { key: N, mods: Shift, mode: Vi, action: SearchPrevious }

  # (Windows, Linux, and BSD only)
  - { key: V, mods: Control|Shift, action: Paste }
  - { key: C, mods: Control|Shift, action: Copy }
  - { key: F, mods: Control|Shift, action: SearchForward }
  - { key: B, mods: Control|Shift, action: SearchBackward }
  - { key: C, mods: Control|Shift, mode: Vi, action: ClearSelection }
  - { key: Insert, mods: Shift, action: PasteSelection }
  - { key: Key0, mods: Control, action: ResetFontSize }
  - { key: Equals, mods: Control, action: IncreaseFontSize }
  - { key: Plus, mods: Control, action: IncreaseFontSize }
  - { key: Minus, mods: Control, action: DecreaseFontSize }

  # (Windows only)
  - { key: Return, mods: Alt, action: ToggleFullscreen }

  # (macOS only)
  - { key: K, mods: Command, mode: ~Vi, chars: "\x0c" }
  - { key: Key0, mods: Command, action: ResetFontSize }
  - { key: Equals, mods: Command, action: IncreaseFontSize }
  - { key: Plus, mods: Command, action: IncreaseFontSize }
  - { key: Minus, mods: Command, action: DecreaseFontSize }
  - { key: K, mods: Command, action: ClearHistory }
  - { key: V, mods: Command, action: Paste }
  - { key: C, mods: Command, action: Copy }
  - { key: C, mods: Command, mode: Vi, action: ClearSelection }
  - { key: H, mods: Command, action: Hide }
  - { key: M, mods: Command, action: Minimize }
  - { key: Q, mods: Command, action: Quit }
  - { key: W, mods: Command, action: Quit }
  - { key: N, mods: Command, action: SpawnNewInstance }
  - { key: F, mods: Command|Control, action: ToggleFullscreen }
  - { key: F, mods: Command, action: SearchForward }
  - { key: B, mods: Command, action: SearchBackward }

debug:
  # Display the time it takes to redraw each frame.
  #render_timer: false

  # Keep the log file after quitting Alacritty.
  #persistent_logging: false

  # Log level
  #
  # Values for `log_level`:
  #   - None
  #   - Error
  #   - Warn
  #   - Info
  #   - Debug
  #   - Trace
  log_level: Info
