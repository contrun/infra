name: Build container images

on:
  workflow_dispatch: {}
  schedule:
    - cron: "0 16 * * 5"
  push:
    branches:
      - master
      - main
      - actions
      - ci
      - "releases/*"
    paths:
      - ".github/workflows/containers.yml"
      - "containers/**/Dockerfile"

jobs:
  container:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - path: "containers/superset"
            kind: "local_directory"
          - path: "contrun/kosyncsrv"
            kind: "github_repository"
          - path: "contrun/eudyptula"
            kind: "github_repository"
          - path: "bookwyrm-social/bookwyrm"
            kind: "github_repository"
          - path: "200ok-ch/organice"
            kind: "github_repository"
          - path: "elasticdog/tiddlywiki-docker"
            kind: "github_repository"
          - path: "logseq/logseq"
            kind: "github_repository"
          - path: "karlicoss/promnesia"
            kind: "github_repository"
          - path: "mkorenkov/docker-perkeep"
            kind: "github_repository"
          # Images not working for now.
          # - path: "DeviaVir/zenbot"
          #   kind: "github_repository"

    steps:
      - name: Checkout ${{ matrix.path }} 
        if: matrix.kind == 'github_repository'
        uses: actions/checkout@v3
        with:
          repository: "${{ matrix.path }}"
          path: "${{ matrix.path }}"

      - name: Checkout
        if: matrix.kind == 'local_directory'
        uses: actions/checkout@v3

      - name: Get docker environment
        id: variables
        working-directory: ${{ matrix.path }}
        run: |
          set -euo pipefail

          set_output() {
              for v in "$@"; do
                  echo "::set-output name=$v::${!v}"
              done 
          }

          case "${{ matrix.kind }}" in
            "github_repository")
              repository="${{ matrix.path }}"
              ;;
          esac
          : "${repository:=}"
          directory="${{ matrix.path }}"
          name="$(basename "$directory")"
          dockerfile="$directory/Dockerfile"
          context="$directory"
          platforms="linux/amd64,linux/arm64"

          case "$repository" in
            "elasticdog/tiddlywiki-docker")
              name=tiddlywiki
              ;;
            "mkorenkov/docker-perkeep")
              name=perkeep
              ;;
            "karlicoss/promnesia")
              dockerfile="$directory/docker/docker_files/Dockerfile"
              ;;
          esac

          set_output name repository platforms directory dockerfile context

          github_username="${{ github.repository_owner }}"
          : "${docker_hub_username:=$github_username}"
          docker_hub_url="docker.io/$docker_hub_username/$name"
          github_container_registry_url="ghcr.io/$github_username/$name"
          git_commit_id="$(git log --format="%H" -n 1)"
          docker_tags="$(echo {$docker_hub_url,$github_container_registry_url}:{latest,$git_commit_id} | tr ' ' ',')"
          docker_image_cache="$github_container_registry_url:cache"
          set_output github_username docker_hub_username docker_image_cache docker_tags

      - name: Patch source files
        working-directory: ${{ steps.variables.outputs.directory }}
        run: |
          case "${{ steps.variables.outputs.repository }}" in
            "DeviaVir/zenbot")
              sed -i 's/npm install/env LIBSASS_EXT=no npm install/g' Dockerfile
              ;;
            "mkorenkov/docker-perkeep")
              sed -i '/git reset --hard "$PERKEEP_VERSION" && \\/d; s/ --sqlite=false//g' Dockerfile
              ;;
            "bookwyrm-social/bookwyrm")
              # In the official Dockerfile, the code is not added to the container image.
              # See https://github.com/bookwyrm-social/bookwyrm/blob/de0c50196ee74e062d9d023c536a7f8af458b2d2/Dockerfile
              sed -i '/RUN pip install -r requirements.txt --no-cache-dir/a COPY . /app' Dockerfile
              echo >> bookwyrm/settings.py
              echo 'INSTALLED_APPS.append("django.contrib.sites")' >> bookwyrm/settings.py
              echo 'SITE_ID = int(env("SITE_ID", 1))' >> bookwyrm/settings.py
              ;;
          esac

      - name: Set up docker buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          registry: docker.io
          username: ${{ steps.variables.outputs.docker_hub_username }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ steps.variables.outputs.github_username }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ${{ steps.variables.outputs.context }}
          file: ${{ steps.variables.outputs.dockerfile }}
          push: ${{ github.event_name != 'pull_request' }}
          platforms: ${{ steps.variables.outputs.platforms }}
          tags: ${{ steps.variables.outputs.docker_tags }}
          cache-from: ${{ steps.variables.outputs.docker_image_cache }}
          cache-to: ${{ steps.variables.outputs.docker_image_cache }}
