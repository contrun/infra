- hosts: localhost
  gather_facts: false
  tasks:
    - assert:
        that:
          - deployments is defined
          - deployments | length > 0

    - set_fact:
        artifacts_dir: "{{ playbook_dir }}/artifacts"
        kubeconfig: "{{ lookup('env', 'KUBECONFIG') | default(lookup('env', 'K8S_AUTH_KUBECONFIG')) }}"
        default_namespace: "default"

    - name: "Ensures {{ artifacts_dir }} exists"
      file:
        path: "{{ artifacts_dir }}"
        state: directory

- hosts: overlay_nodes
  tasks:
    - name: Install zerotier one
      when: '"overlay_nodes" in deployments and (use_zerotier | default(true))'
      become: true
      vars:
        zerotier_register_short_hostname: "{{ zerotier_register_short_hostname | default(true) }}"
      block:
        - assert:
            that:
              - zerotier_network_id is defined
        - include_role:
            role: m4rcu5nl.zerotier-one

    - name: Install tailscale
      when: '"overlay_nodes" in deployments and (use_tailscale | default(true))'
      become: true
      block:
        - set_fact:
            tailscale_up_skip: true
          when: tailscale_auth_key is not defined and tailscale_up_skip is not defined
        - include_role:
            role: artis3n.tailscale

- hosts: edge_proxies
  tasks:
    - assert:
        that:
          - backend_ip_addresses is defined

    - set_fact:
        tcp_forwarding_ports: "{{ edge_proxy_tcp_forwarding_ports | default([80, 443, 4443, 4000, 5678, 8080]) }}"
        backend_ips: "{{ backend_ip_addresses.split(',') }}"
        port_mappings: "{{ port_mappings | default({}) }}"

    - name: Install and configure nginx
      when: '"edge_proxies" in deployments and (use_nginx | default(false))'
      block:
        - name: Install nginx
          include_role:
            name: nginxinc.nginx_core.nginx
          vars:
            nginx_debug_output: true

    - name: Install and configure envoy
      when: '"edge_proxies" in deployments and (use_envoy | default(true))'
      block:
        - name: Install envoy
          include_role:
            name: fabiocruzcoelho.envoyproxy
        - name: Copy templates to default directory
          template:
            src: "{{ item.src }}"
            dest: "{{ item.dest }}"
            mode: "0644"
          loop:
            - src: envoy.yaml.j2
              dest: /etc/envoy/envoy.yaml
          register: envoy_config
        - name: Start/reload Envoy Proxy
          service:
            name: envoyproxy
            state: restarted
            enabled: yes
            daemon_reload: yes
          when: envoy_config.changed

- hosts: localhost
  gather_facts: false
  tasks:
    - name: Install jupyterhub
      when: '"jupyterhub" in deployments'
      block:
        - name: Decrypt secrets
          template:
            src: "{{ item }}"
            dest:  "{{ artifacts_dir }}"
            decrypt: true
          with_fileglob:
            - "files/jupyterhub.yaml*"
        - name: Install
          community.kubernetes.helm:
            name: jupyterhub
            kubeconfig: "{{ kubeconfig }}"
            atomic: false
            chart_repo_url: "https://jupyterhub.github.io/helm-chart/"
            chart_version: "0.9.1"
            chart_ref: jupyterhub
            release_namespace: "{{ default_namespace }}"
            create_namespace: true
            values_files: "{{ lookup('fileglob', '{{ artifacts_dir }}/jupyterhub.yaml*') }}"

- hosts: localhost
  gather_facts: false
  tasks:
    - name: Install cockroachdb
      when: '"database" in deployments and (use_cockroachdb | default(true))'
      block:
        - name: Decrypt secrets
          template:
            src: "{{ item }}"
            dest:  "{{ artifacts_dir }}"
            decrypt: true
          with_fileglob:
            - "files/cockroachdb.yaml*"
        - name: Install
          community.kubernetes.helm:
            name: coachroachdb
            chart_repo_url: "https://charts.cockroachdb.com/"
            chart_version: "5.0.6"
            chart_ref: cockroachdb
            release_namespace: "{{ default_namespace }}"
            kubeconfig: "{{ kubeconfig }}"
            create_namespace: true
            values_files: "{{ lookup('fileglob', '{{ artifacts_dir }}/cockroachdb.yaml*') }}"
