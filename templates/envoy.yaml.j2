{% set ports = [80, 443] %}
static_resources:
  listeners:
{% for port in ports %}
    - name: "{{ "tcp_" ~ port }}"
      address:
        socket_address:
          address: 0.0.0.0
          port_value: {{ port }}
      filter_chains:
        - filters:
            - name: envoy.filters.network.tcp_proxy
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy
                stat_prefix: "{{ "tcp_" ~ port }}"
                cluster: "{{ "tcp_" ~ port }}"
{% endfor %}
  clusters:
{% for port in ports %}
    - name: "{{ "tcp_" ~ port }}"
      connect_timeout: 5s
      type: LOGICAL_DNS
      lb_policy: ROUND_ROBIN
      load_assignment:
        cluster_name: "{{ "tcp_" ~ port }}"
        endpoints:
          - lb_endpoints:
{% for host in groups['backends'] %}
              - endpoint:
                  address:
                    socket_address:
                      address: {{ hostvars[host]['ip_address'] | default(hostvars[host]['ansible_all_ipv4_addresses'][0]) }}
                      port_value: {{ hostvars[host]["port_" ~ port] | default(port) }}
{% endfor %}
      transport_socket_matches:
        - name: "defaultToPlaintext"
          match: {}
          transport_socket:
            name: envoy.transport_sockets.upstream_proxy_protocol
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.transport_sockets.proxy_protocol.v3.ProxyProtocolUpstreamTransport
              config:
                version: V2
              transport_socket:
                name: envoy.transport_sockets.raw_buffer
{% endfor %}
