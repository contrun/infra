name: Build nix packages

on:
  workflow_dispatch:
    inputs:
      host:
        description: "which host profile to build"
        type: string
        required: true
        default: "cicd-x86_64-linux"
      nix-system:
        description: "which system this host uses"
        type: string
        required: true
        default: "x86_64-linux"
      deploy-to-node:
        description: "whether to deploy to nodes"
        type: string
        required: false
        default: "no"
      free-disk-space:
        description: "whether to free disk space"
        type: string
        required: false
        default: "yes"
      ignore-errors:
        description: "whether to ignore errors"
        type: string
        required: false
        default: "no"
      update-nix-inputs:
        description: "whether to update nix inputs"
        type: string
        required: false
        default: "no"
  pull_request:
    branches:
      - master
      - main
      - actions
      - ci
      - "releases/*"
    paths:
      - "*.nix"
      - "**/*.nix"
      - "nix/**"
      - "flake.lock"
  push:
    branches:
      - master
      - main
      - actions
      - ci
      - "releases/*"
    paths:
      - ".github/workflows/nix.yml"
      - "*.nix"
      - "**/*.nix"
      - "nix/**"
      - "flake.lock"
  schedule:
    - cron: "0 16 * * 1"
    - cron: "0 16 * * 5"

jobs:
  build-packages:
    uses: ./.github/workflows/nix-large-packages.yml

  build-nixos:
    if: github.event_name != 'workflow_dispatch' && github.event_name != 'schedule' 
    strategy:
      matrix:
        include:
          - host: "cicd-x86_64-linux"
            nix-system: "x86_64-linux"
          - host: "cicd-aarch64-linux"
            nix-system: "aarch64-linux"
            ignore-errors: true
    uses: ./.github/workflows/nixos.yml
    with:
      host: "${{ matrix.host || 'cicd-x86_64-linux' }}"
      nix-system: "${{ matrix.nix-system || 'x86_64-linux' }}"
      deploy-to-node: "${{ matrix.deploy-to-node || false }}"
      free-disk-space: "${{ (inputs.deploy-to-node || 'no') != 'no' }}"
      ignore-errors: "${{ matrix.ignore-errors || false }}"
      update-nix-inputs: "${{ matrix.update-nix-inputs || false }}"
    secrets: inherit

  build-nixos-when-needed:
    if: github.event_name == 'workflow_dispatch' || github.event_name == 'schedule' 
    uses: ./.github/workflows/nixos.yml
    with:
      host: "${{ inputs.host || 'cicd-x86_64-linux' }}"
      nix-system: "${{ inputs.nix-system || 'x86_64-linux' }}"
      deploy-to-node: "${{ (inputs.deploy-to-node || 'no') != 'no' }}"
      free-disk-space: "${{ github.event_name == 'schedule' || (inputs.deploy-to-node || 'yes') != 'no' }}"
      ignore-errors: "${{ (inputs.ignore-errors || 'no') != 'no' }}"
      update-nix-inputs: "${{ (inputs.update-nix-inputs || 'yes') != 'no' }}"
    secrets: inherit

  build-packages-when-needed:
    needs:
      - build-nixos-when-needed
    if: needs.build-nixos-when-needed.outputs.shouldPushUpdates == 'yes'
    uses: ./.github/workflows/nix-large-packages.yml
    with:
      branch: ${{ needs.build-nixos-when-needed.outputs.branch}}

  create-pull-request-when-needed:
    runs-on: ubuntu-latest
    needs:
      - build-nixos-when-needed
      - build-packages-when-needed
    if: needs.build-nixos-when-needed.outputs.shouldPushUpdates == 'yes'
    steps:
      - name: create pull request
        run: gh pr create -B ${{ github.event.repository.default_branch }} -H ${{ needs.build-nixos-when-needed.outputs.branch }} --title 'update nix flake inputs' --body 'Created by Github action'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
