name: Build large nix packages

on:
  push:
    branches:
      - "x86_64-linux"
      - "aarch64-linux"
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - package: "config.virtualisation.virtualbox.host.package"
            system: "x86_64-linux"
          - package: "pkgs.llvmPackages_latest.llvm"
            system: "x86_64-linux"

    steps:
      - name: Set up common variables
        if: steps.update-nix-inputs.outputs.shouldAbort != 'yes'
        id: variables
        run: |
          set_output() {
              for v in "$@"; do
                  echo "::set-output name=$v::${!v}"
              done
          }

          system=${{ matrix.system }}
          freeDiskSpace=${{ matrix.free-disk-space }}
          packageToBuild=".#nixosConfigurations.maximal-${{ matrix.system }}.${{ matrix.package }}"
          shouldSkip=false
          case '${{ github.event_name }}' in
              'push')
                  if [[ "${{ github.ref_name }}" != "${{ matrix.system }}" ]]; then
                      shouldSkip=true
                  fi
                  ;;
              *)
                  :
                  ;;
          esac

          set_output system freeDiskSpace packageToBuild shouldSkip


      - name: Checkout repository
        if: steps.variables.outputs.shouldSkip != 'true'
        uses: actions/checkout@v3
        with:
          submodules: true

      - name: Setup nix
        if: steps.variables.outputs.shouldSkip != 'true'
        uses: ./
        with:
          setup-cachix: true
          cachix-auth-token: "${{ secrets.CACHIX_AUTH_TOKEN }}"
          setup-qemu: true
          free-disk-space: false
          nix-systems: "${{ steps.variables.outputs.system }}"

      - name: Build the package
        if: steps.variables.outputs.shouldSkip != 'true'
        run: |
          nix build "${{ steps.variables.outputs.packageToBuild }}"

  # Rebuildng with some disk spaces freed
  retry-building:
    runs-on: ubuntu-latest
    needs: build
    if: failure()
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          submodules: true

      - name: Setup nix
        uses: ./
        with:
          setup-cachix: true
          cachix-auth-token: "${{ secrets.CACHIX_AUTH_TOKEN }}"
          setup-qemu: true
          free-disk-space: true
          nix-systems: "${{ needs.build.steps.variables.outputs.system }}"

      - name: Build the package
        run: |
          nix build "${{ needs.build.steps.variables.outputs.packageToBuild }}"
