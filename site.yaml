- hosts: localhost
  gather_facts: false
  tasks:
    - assert:
        that:
          - deployments is defined
          - deployments | length > 0

    - set_fact:
        artifacts_dir: "{{ playbook_dir }}/artifacts"
        kubeconfig: "{{ lookup('env', 'KUBECONFIG') | default(lookup('env', 'K8S_AUTH_KUBECONFIG')) }}"
        default_namespace: "default"

    - name: "Ensures {{ artifacts_dir }} exists"
      file:
        path: "{{ artifacts_dir }}"
        state: directory

- hosts: overlay_nodes
  tasks:
    - name: Install zerotier one
      when:
        - use_zerotier
        - '"overlay_nodes" in deployments'
      become: true
      block:
        - assert:
            that:
              - zerotier_network_id is defined
        - include_role:
            role: ajaykumar4.zerotier

    - name: Install tailscale
      when:
        - use_tailscale
        - '"overlay_nodes" in deployments'
      become: true
      block:
        - set_fact:
            tailscale_up_skip: true
          when: tailscale_auth_key is not defined and tailscale_up_skip is not defined
        - include_role:
            role: artis3n.tailscale

- hosts: edge_proxies
  tasks:
    - set_fact:
        tcp_forwarding_ports: "{{ edge_proxy_tcp_forwarding_ports }}"
        udp_forwarding_ports: "{{ edge_proxy_udp_forwarding_ports }}"
        resolvers: "{{ edge_proxy_resolvers }}"
        backend_ips: "{{ edge_proxy_backend_ip_addresses.split(',') }}"
        port_mappings: "{{ edge_proxy_port_mappings }}"

    # For reverse proxies to figure out which backend server to forward
    - name: Configure systemd-resolved
      when:
        - '"edge_proxies" in deployments'
      block:
        - name: Configure systemd-resolved
          include_role:
            name: aisbergg.systemd-resolved
          vars:
            systemd_resolved_config:
              LLMNR: yes
              MulticastDNS: yes
              DNS:
                - 1.1.1.1
                - 8.8.8.8
                - 9.9.9.9

    - name: Install and configure nginx
      when:
        - '"edge_proxies" in deployments'
        - use_nginx
      block:
        - name: Install nginx
          include_role:
            name: nginxinc.nginx_core.nginx
          vars:
            nginx_debug_output: true
            nginx_install_source_pcre: true
            nginx_logrotate_conf_enable: true

        - name: Copy templates to default directory
          template:
            src: "{{ item.src }}"
            dest: "{{ item.dest }}"
            mode: "0644"
          loop:
            - src: nginx.conf.j2
              dest: /etc/nginx/nginx.conf
          register: nginx_config

        - name: Start/reload Nginx Proxy
          service:
            name: nginx
            state: restarted
            enabled: yes
          when: nginx_config.changed

    - name: Install and configure envoy
      when:
        - '"edge_proxies" in deployments'
        - use_envoy
      block:
        - name: Add envoy gpg key
          when: ansible_facts['os_family'] == "Debian"
          ansible.builtin.apt_key:
            url: https://deb.dl.getenvoy.io/public/gpg.8115BA8E629CC074.key
            state: present

        - name: Set envoy ubuntu repo
          when: ansible_facts['distribution'] == "Ubuntu"
          set_fact:
            envoyproxy_repository:
              - "deb [arch=amd64] https://deb.dl.getenvoy.io/public/deb/ubuntu {{ ansible_facts['distribution_release'] }} stable"

        - name: Install envoy
          include_role:
            name: hugoprudente.envoyproxy

        - name: Copy templates to default directory
          template:
            src: "{{ item.src }}"
            dest: "{{ item.dest }}"
            mode: "0644"
          loop:
            - src: envoy.yaml.j2
              dest: /etc/envoy/envoy.yaml
          register: envoy_config

        - name: Start/reload Envoy Proxy
          service:
            name: envoyproxy
            state: restarted
            enabled: yes
            daemon_reload: yes
          when: envoy_config.changed

- hosts: edge_proxies
  tasks:
    - name: Install and configure promtail
      when:
        - '"edge_proxy_logs" in deployments'
        - enable_promtail
        - loki_url is defined
      block:
        - name: Install promtail
          include_role:
            name: patrickjahns.promtail
          vars:
            promtail_user_additional_groups: "adm,utmp,root,syslog,systemd-journal"
            promtail_config_server:
              http_listen_port: 9080
              grpc_listen_port: 9081
            promtail_config_clients:
              - url: "{{ loki_url }}"
                external_labels:
                  host: "{{ ansible_hostname }}"
                  nodename: "{{ ansible_hostname }}"
            promtail_config_positions:
              filename: "{{ promtail_positions_directory }}/positions.yaml"
              sync_period: "60s"

            promtail_config_scrape_configs:
              - job_name: system
                static_configs:
                  - targets:
                      - localhost
                    labels:
                      job: varlogs
                      __path__: /var/log/**/*log

              - job_name: journal
                journal:
                  labels:
                    job: journald
                  max_age: 12h
                relabel_configs:
                  - source_labels:
                      - __journal__boot_id
                    target_label: boot_id
                  - source_labels:
                      - __journal__comm
                    target_label: command
                  - source_labels:
                      - __journal__cmdline
                    target_label: command_line
                  - source_labels:
                      - __journal__exe
                    target_label: executable
                  - source_labels:
                      - __journal__hostname
                    target_label: nodename
                  - source_labels:
                      - __journal__systemd_unit
                    target_label: systemd_unit
                  - source_labels:
                      - __journal__systemd_user_unit
                    target_label: systemd_user_unit
                  - source_labels:
                      - __journal__syslog_identifier
                    target_label: syslog_identifier
                  - source_labels:
                      - __journal_priority
                    target_label: journal_priority
                  - source_labels:
                      - __journal__transport
                    target_label: journal_transport
                  - source_labels:
                      - __journal_image_name
                    target_label: container_image_name
                  - source_labels:
                      - __journal_container_name
                    target_label: container_name
                  - source_labels:
                      - __journal_container_id
                    target_label: container_id
                  - source_labels:
                      - __journal_container_tag
                    target_label: container_tag

- hosts: localhost
  gather_facts: false
  tasks:
    - name: Install jupyterhub
      when: '"jupyterhub" in deployments'
      block:
        - name: Decrypt secrets
          template:
            src: "{{ item }}"
            dest: "{{ artifacts_dir }}"
            decrypt: true
          with_fileglob:
            - "files/jupyterhub.yaml*"
        - name: Install
          community.kubernetes.helm:
            name: jupyterhub
            kubeconfig: "{{ kubeconfig }}"
            atomic: false
            chart_repo_url: "https://jupyterhub.github.io/helm-chart/"
            chart_version: "0.9.1"
            chart_ref: jupyterhub
            release_namespace: "{{ default_namespace }}"
            create_namespace: true
            values_files: "{{ lookup('fileglob', '{{ artifacts_dir }}/jupyterhub.yaml*') }}"

- hosts: localhost
  gather_facts: false
  tasks:
    - name: Install cockroachdb
      when:
        - '"database" in deployments'
        - use_cockroachdb
      block:
        - name: Decrypt secrets
          template:
            src: "{{ item }}"
            dest: "{{ artifacts_dir }}"
            decrypt: true
          with_fileglob:
            - "files/cockroachdb.yaml*"
        - name: Install
          community.kubernetes.helm:
            name: coachroachdb
            chart_repo_url: "https://charts.cockroachdb.com/"
            chart_version: "5.0.6"
            chart_ref: cockroachdb
            release_namespace: "{{ default_namespace }}"
            kubeconfig: "{{ kubeconfig }}"
            create_namespace: true
            values_files: "{{ lookup('fileglob', '{{ artifacts_dir }}/cockroachdb.yaml*') }}"
